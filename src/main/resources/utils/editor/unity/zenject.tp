using UnityEngine;
using Zenject;

namespace %PROJECT_NAME%.Editor.Unity
{
    public class ZenjectInstallerObject : IUnityGameObject
    {
        private readonly string _sceneName;

        public ZenjectInstallerObject(string sceneName)
        {
            _sceneName = sceneName;
        }

        private string GetInstallerName()
        {
            return UnitySceneUtility.ViewNameSpace + _sceneName + "." + _sceneName + "Installer";
        }

        public GameObject CreateGameObject()
        {
            GameObject zenject = new GameObject("Zenject");

            List<MonoInstaller> installers = new List<MonoInstaller>();
            installers.Add(CreateMonoInstaller(zenject.transform, _sceneName, "View"));
            installers.Add(CreateMonoInstaller(zenject.transform, _sceneName, "Domain"));
            installers.Add(CreateMonoInstaller(zenject.transform, _sceneName, "Data"));

            GameObject context = new GameObject("SceneContext");
            SceneContext sceneContext = context.AddComponent<SceneContext>();
            sceneContext.Installers = installers;
            context.transform.parent = zenject.transform;
            return zenject;
        }

        private MonoInstaller CreateMonoInstaller(Transform parent, string sceneName, string name)
        {
            UnityGameObject installer = new UnityGameObject(sceneName, sceneName + name + "Installer");
            GameObject installerObject = installer.CreateGameObject();
            installerObject.transform.parent = parent;
            return installerObject.GetComponent<MonoInstaller>();
        }
    }
}