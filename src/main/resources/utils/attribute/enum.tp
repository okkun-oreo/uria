using System;
using UnityEngine;

namespace %PROJECT_NAME%.Attributes
{
    public class StringValueAttribute : PropertyAttribute
    {
        public string StringValue { get; protected set; }

        public StringValueAttribute(string value)
        {
            StringValue = value;
        }
    }

    public static class CommonAttribute
    {
        public static string GetStringValue(this Enum value)
        {
            try
            {
                Type type = value.GetType();
                System.Reflection.FieldInfo fieldInfo = type.GetField(value.ToString());

                if (fieldInfo == null)
                {
                    return null;
                }

                StringValueAttribute[] attribs = fieldInfo.GetCustomAttributes(typeof(StringValueAttribute), false) as StringValueAttribute[];

                return attribs.Length > 0 ? attribs[0].StringValue : null;
            }
            catch (Exception)
            {
                return null;
            }
        }
    }
}